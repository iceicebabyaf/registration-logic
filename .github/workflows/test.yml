name: Test Registration Logic

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
      POSTGRES_HOST: fastapi_db
      POSTGRES_PORT: 5432
    steps:
    - uses: actions/checkout@v2
    - name: Install docker-compose and netcat-openbsd
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        sudo apt-get update
        sudo apt-get install -y netcat-openbsd
    - name: Start services
      run: docker-compose up -d
    - name: Wait for services to start
      run: |
        until nc -z 127.0.0.1 8000; do
          echo "Waiting for FastAPI..."
          sleep 1
        done
    - name: Wait for PostgreSQL to start
      run: |
        until docker exec fastapi_db pg_isready -U ${{ secrets.POSTGRES_USER }}; do
          echo "Waiting for PostgreSQL..."
          sleep 1
        done    
    - name: Check PostgreSQL logs
      if: always()
      run: docker logs fastapi_db
    - name: Create database if not exists
      run: docker exec -i fastapi_db psql -U ${{ secrets.POSTGRES_USER }} -c "CREATE DATABASE \"${{ secrets.POSTGRES_DATABASE }}\";" || true
    - name: Verify database creation
      run: docker exec -i fastapi_db psql -U ${{ secrets.POSTGRES_USER }} -l
    - name: Create users table if not exists
      run: docker exec -i fastapi_db psql -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DATABASE }} -c "CREATE TABLE IF NOT EXISTS users (email VARCHAR(255) UNIQUE NOT NULL, password VARCHAR(255) NOT NULL, balance DECIMAL DEFAULT 0.0, is_logged_in BOOLEAN DEFAULT FALSE);"
    - name: Check if users table exists
      run: docker exec -i fastapi_db psql -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DATABASE }} -c "\dt"
    - name: Debug table creation
      run: docker exec -i fastapi_db psql -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DATABASE }} -c "\d users" || echo "Table check failed"
    - name: Reset database
      run: docker exec -i fastapi_db psql -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DATABASE }} -c "TRUNCATE TABLE users RESTART IDENTITY;"
    - name: Run tests
      run: bash tests/test.sh
    - name: Show FastAPI logs after tests
      if: always()
      run: docker logs fastapi_app
    - name: Show logs if tests fail
      if: failure()
      run: docker-compose logs
    - name: Stop services
      run: docker-compose down